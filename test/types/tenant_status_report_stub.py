# coding: utf-8
"""Waylay Storage model tests.

This code was generated from the OpenAPI documentation of 'Waylay Storage'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import datetime
import json
import warnings

from typing import (
    Union,
    List,
    Dict,
    Literal,  # >=3.8
)
from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.storage.models.tenant_status_report import TenantStatusReport

    TenantStatusReportAdapter = TypeAdapter(TenantStatusReport)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

tenant_status_report_model_schema = json.loads(
    r"""{
  "required" : [ "tenant" ],
  "type" : "object",
  "properties" : {
    "tenant" : {
      "title" : "Tenant",
      "type" : "string"
    },
    "buckets" : {
      "title" : "Buckets",
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/BucketConfiguration"
      }
    },
    "queues" : {
      "title" : "Queues",
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/NotificationQueueStatusReport"
      }
    },
    "total_size" : {
      "title" : "Total Size",
      "type" : "integer"
    },
    "bucket_status" : {
      "$ref" : "#/components/schemas/BUCKET_CREATION_STATUS"
    },
    "policy_status" : {
      "$ref" : "#/components/schemas/BUCKET_POLICY_STATUS"
    },
    "queue_status" : {
      "$ref" : "#/components/schemas/QUEUE_SETUP_STATUS"
    }
  },
  "description" : "Response model for a tenant status report."
}
""",
    object_hook=with_example_provider,
)
tenant_status_report_model_schema.update({"definitions": MODEL_DEFINITIONS})

tenant_status_report_faker = JSF(
    tenant_status_report_model_schema, allow_none_optionals=1
)


class TenantStatusReportStub:
    """TenantStatusReport unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return tenant_status_report_faker.generate()

    @classmethod
    def create_instance(cls) -> "TenantStatusReport":
        """Create TenantStatusReport stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return TenantStatusReportAdapter.validate_python(cls.create_json())
