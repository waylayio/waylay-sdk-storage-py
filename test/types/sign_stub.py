# coding: utf-8
"""Waylay Storage model tests.

This code was generated from the OpenAPI documentation of 'Waylay Storage'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import datetime
import json
import warnings

from typing import (
    Union,
    List,
    Dict,
    Literal,  # >=3.8
)
from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.storage.models.sign import SIGN

    SIGNAdapter = TypeAdapter(SIGN)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

sign_model_schema = json.loads(
    r"""{
  "title" : "SIGN",
  "type" : "string",
  "description" : "Supported `sign` url parameter values.",
  "enum" : [ "GET", "PUT", "POST" ]
}
""",
    object_hook=with_example_provider,
)
sign_model_schema.update({"definitions": MODEL_DEFINITIONS})

sign_faker = JSF(sign_model_schema, allow_none_optionals=1)


class SIGNStub:
    """SIGN unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return sign_faker.generate()

    @classmethod
    def create_instance(cls) -> "SIGN":
        """Create SIGN stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return SIGNAdapter.validate_python(cls.create_json())
