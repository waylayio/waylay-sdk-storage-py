# coding: utf-8
"""Waylay Storage model tests.

This code was generated from the OpenAPI documentation of 'Waylay Storage'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.storage.models.bucket_listing import BucketListing

    BucketListingAdapter = TypeAdapter(BucketListing)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

bucket_listing_model_schema = json.loads(
    r"""{
  "required" : [ "buckets" ],
  "type" : "object",
  "properties" : {
    "_links" : {
      "title" : " Links",
      "type" : "object",
      "additionalProperties" : {
        "$ref" : "#/components/schemas/_Links"
      }
    },
    "buckets" : {
      "title" : "Buckets",
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/Bucket"
      }
    }
  },
  "description" : "List of Bucket representations."
}
""",
    object_hook=with_example_provider,
)
bucket_listing_model_schema.update({"definitions": MODEL_DEFINITIONS})

bucket_listing_faker = JSF(bucket_listing_model_schema, allow_none_optionals=1)


class BucketListingStub:
    """BucketListing unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return bucket_listing_faker.generate(use_defaults=True, use_examples=True)

    @classmethod
    def create_instance(cls) -> "BucketListing":
        """Create BucketListing stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if not json:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(
                BucketListingAdapter.json_schema(), allow_none_optionals=1
            )
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return BucketListingAdapter.validate_python(
            json, context={"skip_validation": True}
        )
